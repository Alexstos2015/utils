-- 1.
DELETE FROM object_record WHERE record_id IN ('balance.102.pp.all', 'balance.102.general');

-- 2.
-- Необходимо сохранить в конфиг CLOB. Нарушения типов нет, но setConfigurationKey не поддерживает CLOB, только VARCHAR2.
INSERT INTO CONFIG (NAME, VALUE, DESCRIPTION) VALUES (
    'b2b.gm_page_stats',
    (SELECT VALUE FROM object_record WHERE record_id = 'b2b' AND record_type = 'GM_PAGE_STATS'),
    'Данные из object_record для record_id= b2b'
);
call setUssConfigurationKey('fttb.method.cache.FAIR_USAGE', 7200, 'Время хранения данных кэша FAIR USAGE в секундах');
DELETE FROM object_record WHERE record_id = 'b2b' AND record_type = 'GM_PAGE_STATS';

-- 3.
CREATE TABLE PLE_DISTRIBUTION(
	RECORD_ID VARCHAR2(20),
	RECORD_TYPE VARCHAR2(20),
	VALUE CLOB,
	CREATION_DATE TIMESTAMP(6),
	CONSTRAINT PK_PLE_DISTRIBUTION PRIMARY KEY(RECORD_ID, RECORD_TYPE)
);
INSERT INTO PLE_DISTRIBUTION
	SELECT RECORD_ID, RECORD_TYPE, VALUE, CREATION_DATE FROM object_record WHERE record_type = 'PLE_DISTRIBUTION';
DELETE FROM OBJECT_RECORD WHERE record_type = 'PLE_DISTRIBUTION';

-- 4.
DROP PROCEDURE CLEAR_OBJECT_RECORD;
-- Удаляем JOB BEGIN CLEAR_OBJECT_RECORD; COMMIT; END;
-- Проверьте идентификатор.
BEGIN
    DBMS_JOB.REMOVE(3213);
END;
DROP TABLE OBJECT_RECORD;

CREATE TABLE OBJECT_RECORD(
	RECORD_ID VARCHAR2(20),
	RECORD_TYPE VARCHAR2(20),
	VALUE CLOB,
	CREATION_DATE TIMESTAMP(6),
	CREATE_DAY NUMBER(2) DEFAULT EXTRACT(DAY FROM SYSDATE) CHECK(CREATE_DAY >= 1 AND CREATE_DAY <= 31),
	CONSTRAINT PK_OBJECT_RECORD PRIMARY KEY(RECORD_ID, RECORD_TYPE, CREATE_DAY) USING INDEX LOCAL
)
NOLOGGING
PARTITION BY RANGE (CREATE_DAY) (
	PARTITION OBJECT_RECORD_1 VALUES LESS THAN (2),
    PARTITION OBJECT_RECORD_2 VALUES LESS THAN (3),
    PARTITION OBJECT_RECORD_3 VALUES LESS THAN (4),
    PARTITION OBJECT_RECORD_4 VALUES LESS THAN (5),
    PARTITION OBJECT_RECORD_5 VALUES LESS THAN (6),
    PARTITION OBJECT_RECORD_6 VALUES LESS THAN (7),
    PARTITION OBJECT_RECORD_7 VALUES LESS THAN (8),
    PARTITION OBJECT_RECORD_8 VALUES LESS THAN (9),
    PARTITION OBJECT_RECORD_9 VALUES LESS THAN (10),
    PARTITION OBJECT_RECORD_10 VALUES LESS THAN (11),
    PARTITION OBJECT_RECORD_11 VALUES LESS THAN (12),
    PARTITION OBJECT_RECORD_12 VALUES LESS THAN (13),
    PARTITION OBJECT_RECORD_13 VALUES LESS THAN (14),
    PARTITION OBJECT_RECORD_14 VALUES LESS THAN (15),
    PARTITION OBJECT_RECORD_15 VALUES LESS THAN (16),
    PARTITION OBJECT_RECORD_16 VALUES LESS THAN (17),
    PARTITION OBJECT_RECORD_17 VALUES LESS THAN (18),
    PARTITION OBJECT_RECORD_18 VALUES LESS THAN (19),
    PARTITION OBJECT_RECORD_19 VALUES LESS THAN (20),
    PARTITION OBJECT_RECORD_20 VALUES LESS THAN (21),
    PARTITION OBJECT_RECORD_21 VALUES LESS THAN (22),
    PARTITION OBJECT_RECORD_22 VALUES LESS THAN (23),
    PARTITION OBJECT_RECORD_23 VALUES LESS THAN (24),
    PARTITION OBJECT_RECORD_24 VALUES LESS THAN (25),
    PARTITION OBJECT_RECORD_25 VALUES LESS THAN (26),
    PARTITION OBJECT_RECORD_26 VALUES LESS THAN (27),
    PARTITION OBJECT_RECORD_27 VALUES LESS THAN (28),
    PARTITION OBJECT_RECORD_28 VALUES LESS THAN (29),
    PARTITION OBJECT_RECORD_29 VALUES LESS THAN (30),
    PARTITION OBJECT_RECORD_30 VALUES LESS THAN (31),
    PARTITION OBJECT_RECORD_31 VALUES LESS THAN (32)
);
ALTER TABLE OBJECT_RECORD LOGGING;
COMMIT;